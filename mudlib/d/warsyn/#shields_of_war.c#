22[B[D4
223[A 
inherit "/std/spells/spell";

void create() 
{
    ::create();
    set_property("name","shields of war");
    set_property("skill","prayer");
    set_property("casting time",7);
    set_property("base mp cost",39);
    set_property("dev cost", 50);
    set_property("fast dev cost", 105);
    set_property("spell level", 13);
    set_property("moon","ankh");
    set_property("caster message","You cast shields of war at $T.");
    set_property("target message","$C casts shields of war at you.");
    set_property("observer message","$C casts shields of war at $T.");
    set_property("spell type",({ "protection" }));
    set_property("protection types", ([ "impact" : 15 ]));
    set_property("duration", 100);
    set_property("target type", "living");
   set_property("must be present",1);
    return;
}

void info() 
{
message("help",
"This spell creates small discs of light that surround the target. "
"While in effect the discs attempt to deflect physical damage "
"but will not effect spells.",
this_player());
}

void spell_func(object caster, object at, int power, string args, int flag) 
{
  object ob;
  seteuid(getuid());
  if(flag) 
{
    message("info", "%^RED%^%^BOLD%^You lose control of the spell! ",caster);
    message("info", (string)caster->query_cap_name()+" accidentally shoots balls of light at "+
          (string)at->query_cap_name()+"!", environment(caster),
        ({ caster, at }));
    message("info", (string)caster->query_cap_name()+" accidentally shoots balls of light at "+
"you!", at);
    do_critical(caster, at, ({ "impact c" }) );
    remove();
    return;
 	 }
  if(at->query_shields_of_war()) 
{
    message("info", "Target is already protected by this spell.",caster);
    caster->add_mp(props["mp cost"]);
    remove();
    return;
  	}
  ob = new("/std/spells/shadows/w_shield_shad");
  ob->set_level(power);
  ob->start_shadow(at, props["duration"], 0);
  ::spell_func(caster, at, power, args, flag);
  remove();
  return;
}
