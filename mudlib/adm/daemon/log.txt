#save_items_d.c#:    log_file("update_lockers", "Obj register not found.\nNO UPDATE!\n");

#save_items_d.c#:  log_file("update_lockers", "Locker update at: "+ctime(time())+

#save_items_d.c#:    log_file("update lockers", "Locker register not found!\n");

#save_items_d.c#:  log_file("update_lockers", "Hanging lockers taken from obj register: "+

#save_items_d.c#:  log_file("update_lockers", "Total unregistered dup. lockers: "+rmd+"\n");

advance_d.c:void log_death(string str) { log_file("kills", str); }

alchemist_d.c://             and using the prop_logic seperated by Pallando@TMI-2

alchemist_d.c:inherit "/std/prop_logic";

alchemist_d.c:    // Defined in /std/prop_logic

banish.c:int allow_logon(string nom, string ip);

banish.c:int allow_logon(string nom, string ip) { 

banish.c:        log_file("watch/names", sprintf("%s from %s at %s\n", nom, ip,

banish.c:        log_file("watch/"+ip, sprintf("%s at %s\n", nom, ctime(time())));

banish.c:        log_file("watch/allowed", sprintf("%s from %s at %s\n", nom, ip,

banish.c:            log_file("watch/"+ip, sprintf("%s allowed in from %s at %s\n", nom, ip,

banish.c:            log_file("watch/"+ip, sprintf("%s failed from %s at %s\n", nom, ip,

bank_d.c:    log_file("bank", who+" deposited "+amount+" coins in "+bank+": "+ctime(time())+"\n");

bank_d.c:    log_file("bank", who+" withdrew "+amount+" coins in "+bank+": "+ctime(time())+"\n");

delayed_function_d.c:          log_file("delay_errors", "Error in delayed call: "+fname+"\n"+err+"\n");

delayed_function_d.c:          log_file("delay_errors", "Error in delayed call: "+fname+"\n"+err+"\n");

delayed_function_d.c:          log_file("delay_errors", "Error in delayed call: "+fname+"\n"+err+"\n");

delayed_function_d.c:          log_file("delay_errors", "Error in delayed call: "+fname+"\n"+err+"\n");

delayed_function_d.c:          log_file("delay_errors", "Error in delayed call: "+fname+"\n"+err+"\n");

guild_d.bak:  log_file("guilds/"+guild+"/privs", ctime(time())+"--"+

guild_d.bak:    log_file("guilds/"+guild+"/privs", ctime(time())+"--"+

guild_d.bak:  log_file("guilds/"+guild+"/allow", ctime(time())+"--"+capitalize(target)+

guild_d.bak:  log_file("guilds/"+guild+"/allow", ctime(time())+"--"+capitalize(target)+

guild_d.bak:  log_file("guilds/"+guild+"/punish", ctime(time())+"--"+capitalize(target)+

guild_d.bak:  log_file("guilds/"+guild+"/punish", ctime(time())+"--"+capitalize(target)+

guild_d.bak:    log_file("guilds/"+guild+"/membership", ctime(time())+"--"+capitalize(who)+

guild_d.bak:      log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.bak:    log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.bak:    log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/ally", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/ally", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/enemy", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/enemy", ctime(time())+"--"+capitalize(who)+

guild_d.bak:    log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.bak:    log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

guild_d.bak:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/privs", ctime(time())+"--"+

guild_d.c:    log_file("guilds/"+guild+"/privs", ctime(time())+"--"+

guild_d.c:  log_file("guilds/"+guild+"/allow", ctime(time())+"--"+capitalize(target)+

guild_d.c:  log_file("guilds/"+guild+"/allow", ctime(time())+"--"+capitalize(target)+

guild_d.c:  log_file("guilds/"+guild+"/punish", ctime(time())+"--"+capitalize(target)+

guild_d.c:  log_file("guilds/"+guild+"/punish", ctime(time())+"--"+capitalize(target)+

guild_d.c:    log_file("guilds/"+guild+"/membership", ctime(time())+"--"+capitalize(who)+

guild_d.c:      log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.c:    log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.c:    log_file("guilds/"+guild+"/purge", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/ally", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/ally", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/enemy", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/enemy", ctime(time())+"--"+capitalize(who)+

guild_d.c:    log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.c:    log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/money", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

guild_d.c:  log_file("guilds/"+guild+"/guest", ctime(time())+"--"+capitalize(who)+

inactivity_d.c:/*	Player inactivity daemon.  Checks for what players haven't logged

inactivity_d.c:  log_file("auto_remove","User inactivity check at "+ctime(time()) +":\n");

inactivity_d.c:	log_file("auto_remove",user_dir[j][0] + " ("+postn+

news_d.c:               log_file("clean_news", ctime(time())+":\n");

news_d.c:               log_file("clean_news", "\t"+fa+" moved to "+fb+"\n");

race_d.c:            log_file("races", "Error: No such file "+LIMB_DIR+b_types[i]+"\n");

save_items.new.c:    log_file("update_lockers", "Obj register NOT FOUND...no update!\n");

save_items_d.c:    log_file("update_lockers", "Obj register not found.\nNO UPDATE!\n");

save_items_d.c:  log_file("update_lockers", "Locker update at: "+ctime(time())+

save_items_d.c:    log_file("update lockers", "Locker register not found!\n");

save_items_d.c:  log_file("update_lockers", "Hanging lockers taken from obj register: "+

save_items_d.c:  log_file("update_lockers", "Total unregistered dup. lockers: "+rmd+"\n");

save_items_d.c~:    log_file("update_lockers", "Obj register not found.\nNO UPDATE!\n");

save_items_d.c~:  log_file("update_lockers", "Locker update at: "+ctime(time())+

save_items_d.c~:  log_file("update_lockers", "Total unregistered dup. lockers: "+rmd+"\n");

save_items_d.old:    log_file("update_lockers", "Obj register not found.\nNO UPDATE!\n");

save_items_d.old:  log_file("update_lockers", "Locker update at: "+ctime(time())+

save_items_d.old:  log_file("update_lockers", "Total unregistered dup. lockers: "+rmd+"\n");

save_items_old.c:    log_file("locker_errors", "Duplicate item in register: "+

save_items_old.c:      log_file("locker_errors", "Object: "+file_name(previous_object())+"\n");

save_items_old.c:  log_file("update_lockers", "Locker update: "+ctime(time())+"\n");

save_items_old.c:    log_file("update_lockers", "After 5 tries, all locker rooms not responding.\nAborting.\n");

save_items_old.c:    log_file("update_lockers", "All lockers not responded.\n"

save_items_old.c:  log_file("update_lockers", "Phase 2: "+ctime(time())+"\n");

save_items_old.c:  log_file("update_lockers", "DONE!\n"+sprintf("Files deleted: %d\n", rmd));

su_d.c:    log_file("su","/adm/daemon/su_d called by "+

su_d.c:  if(MULTI_D->query_prevent_login(nme)){

su_d.c:   * log_file("ENTER", name+"\tenter\t\t" + ctime(time()) + 

su_d.c:version of your own character. It is equivalent to logging out and logging

