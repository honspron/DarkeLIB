//     /bin/user/_whirl.c

//     A rogue/fighter physical attack

//     Written by Forlock for the Nightmare lib.

 

#include <std.h>

 

inherit DAEMON;

 

int cmd_whirl (string str) {

   

   int attack, check, total;

   int phys;

   int retvaule;

   object ob;

    if(!sizeof((object *)this_player()->query_wielded())) {

        notify_fail("You must be wielding something to whirl well!\n");

        return 0;

    }

    if(!str)

      ob = (object)this_player()->query_current_attacker();

    else {

       ob = present(str, environment(this_player()));

       if(!ob) ob = parse_objects(environment(this_player()), str);

    }

   if(!ob || !living(ob)) {

        notify_fail("That is not here as such.\n");

      return 0;

   }

   if((attack = (int)this_player()->query_skill("attack")) < 30) {

      notify_fail("You are not skilled enough for this spell.\n");

      return 0;

   }

   if(this_player()->query_ghost()) {

      notify_fail("Your voice is hollow.\n");

      return 0;

   }

 

   if(this_player()->query_casting()) return 1;

   if(!this_player()->kill_ob(ob)) return 1;

   if(environment(this_player())->query_property("no attack")) {

      notify_fail("A magic force prevents you from doing your attack.\n");

      return 0;

   }

    if((int)this_player()->query_sp() < 50) {

        notify_fail("You are too tired.\n");

        return 0;

    }

    this_player()->set_disable();

    check = random(6-(phys=(int)this_player()->query_physical()));

   if (check == 0) {

      write("You whirl at your opponent, and hit "+ob->query_objective()+"!\n");

      

      tell_room(environment(this_player()), this_player()->query_cap_name()+ "

whirls at "+(string)ob->query_cap_name() + "\n", ({ob, this_player()}));

      tell_object(ob, this_player()->query_cap_name()+" whirls at you.\n");

      total = random(attack*(3+(phys/2))/2);

      this_player()->add_skill_points("attack", total);

      this_player()->add_sp(-(total/2));

      ob->add_hp(-total);

      return 1;

   }

   write("You whirl at your opponant, and miss.\n");

   tell_room(environment(this_player()), this_player()->query_cap_name()+ "

whirls around the room randomly, and looks silly.\n", ({ob, this_player()}));

   this_player()->add_sp(-10);

   return 1;

}

void help() {

   write("Syntax: <whirl [(living)]>\n\n"

      "Causes you to whirl at the object named, giving you a random\n"

      "chance to hit it.  Costs sp's.\n");

}

