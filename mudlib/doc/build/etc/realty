The Nightmare mudlib allows high mortals to create a home any where on the
mud that does not have the property "no castle" defined in it.  When a player
makes high mortal, that person gets a deed with which they may build a 
castle.  By going to a room and typing build castle, this player
creates an entrance into their home, which at start consists of a single
room.  They can then set the short desc, long desc, and add one item.
Anything beyond that, they have to pay for.

How do they do this? Well in /obj are two files which give an example of
an object which can be bought that the player uses to create a description
for a room (describer.c), and another which adds an item to their room 
(itemer.c).  There is a daemon, castle_d.c, which can add lines to
room files in the players room.  You can call the following functions in
it:

add_item(string where, string item, string description)
	where is simply the name of the file (without the .c) that the
	player is trying to modify.
	item is the string of the item which is being added
	description is the item description

add_description(string where, string short, string long)
	where is where again
	short is the room's short description (it starts afresh, it does not
	append)
	long is the new long description for the room

add_init(string where, string action, string lines)
	where, again, is where
	action is the line:
	    add_action("foo", "foo");
	EVERYTHING THERE INCLUDED IN THE STRING
	remember, to pass that as an arg, you would have to call it like
	this:
	    CASTLE_D->add_init(here, "add_action(\"foo\", \"foo\");", lines);
	lines would be the function foo() that the add action calls

add_reset(string where, string lines)
    	where is where
	lines are the lines of code which should be added to the reset
	function.  Implement this how you like, except that balance must
	approve all costs!

